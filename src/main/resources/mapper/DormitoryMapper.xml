<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dms_idea.dao.DormitoryMapper">

    <resultMap id="DormitoryList" type="Dormitory">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="unitNumber" column="unit_number"/>
        <result property="stuNumber" column="stu_number"/>
        <result property="bedNumber" column="bed_number"/>
        <result property="updateTime" column="update_time"/>
        <result property="floorNumber" column="floor_number"/>
        <result property="buildingName" column="building_name"/>
        <result property="manName" column="man_name"/>
        <result property="picture" column="picture"/>
        <result property="workId" column="work_id"/>
        <result property="buildingId" column="building_id"/>
        <result property="managerId" column="manager_id"/>
        <collection property="studentList"
                    select="com.example.dms_idea.dao.StudentMapper.getStudentByDormitoryId" column="id" />
    </resultMap>

    <select id="getDormitoryList" resultMap="DormitoryList">
        select *
        from dormitory_management_system.view_get_all_dormitory_list
        <where>
            <if test="map.name!=null">and name like concat('%',#{map.name},'%')</if>
            <if test="map.unitNumber!=null">and unit_number = #{map.unitNumber}</if>
            <if test="map.buildingId!=null">and building_id=#{map.buildingId}</if>
            <if test="map.floorNumber!=null">and floor_number=#{map.floorNumber}</if>
            <if test="map.stuNumber!=null">and stu_number>=#{map.stuNumber}</if>
            <if test="map.bedNumber!=null">and bed_number-stu_number>=#{map.bedNumber}</if>
            <if test="map.managerId!=null">and manager_id=#{map.managerId}</if>
        </where>
        <if test="prop!=null">
            order by ${prop} ${order}
        </if>
    </select>

    <insert id="addDormitory">
        insert into dormitory_management_system.dormitory(building_id, name, bed_number, update_time, unit_number, floor_number)
        VALUES (#{buildingId}, #{name}, #{bedNumber}, now(), #{unitNumber}, #{floorNumber})
    </insert>

    <select id="ifDormitoryNameHaveInTheSameUnitAndFloor">
        select count(*)
        from dormitory_management_system.dormitory
        where name = #{name}
          and building_id = #{buildingId}
          and unit_number = #{unitNumber}
          and floor_number = #{floorNumber}
    </select>

    <select id="getMaxUnitAndFloor">
        select Max(unit_number) as unitNumber, MAX(floor_number) as floorNumber
        from dormitory_management_system.dormitory
        where building_id = #{id}
    </select>

    <select id="getDormitoryById">
        select *
        from dormitory_management_system.view_get_all_dormitory_list
        where id = #{id}
    </select>

    <update id="updateDormitory">
        update dormitory_management_system.dormitory
        set name=#{name},
            unit_number=#{unitNumber},
            floor_number=#{floorNumber},
            bed_number=#{bedNumber},
            picture=#{picture},
            update_time=now(),
            building_id=#{buildingId}
        where id = #{id}
    </update>

    <delete id="deleteDormitory">
        delete
        from dormitory_management_system.dormitory
        where id = #{id}
    </delete>

    <select id="checkDormitoryName">
        select  name
        from dormitory_management_system.dormitory
        where building_id=#{buildingId} and unit_number = #{unitNumber} and floor_number = #{floorNumber}
    </select>

    <update id="addStudentNumber">
        update dormitory_management_system.dormitory
        set stu_number = stu_number + #{num}
        where id=#{id}
    </update>

    <select id="getDormitoryListByBuildingIdUnitFloor">
        select *
        from dormitory_management_system.view_get_all_dormitory_list
        where building_id=#{id} and unit_number = #{unit} and floor_number = #{floor}
    </select>

    <select id="getDormitoryUnitHasDor">
        select distinct unit_number
        from dormitory_management_system.view_get_all_dormitory_list where building_id=#{buildingId} order by unit_number
    </select>

    <select id="getDormitoryFlootHasDor">
        select distinct floor_number
        from dormitory_management_system.view_get_all_dormitory_list where building_id=#{buildingId} and unit_number=#{unit} order by floor_number
    </select>
</mapper>